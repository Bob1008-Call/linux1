1.容器
        （1）序列式容器：线性的数据结构
            （i）string
            （ii）C++11：array->静态顺序表
            （iii）vector->动态的顺序表
            （iiii）list->带头节点的双向循环链表
            （iiiii）C++11：forward_list-->带头节点单项循环链表
            （iiiiii）deque：动态二维数组
    2.适配器
        （1）适配器模式概念
        （2）容器适配器
            （i）stack：deque（为什么没有用vector，因为在增容的时候会进行大量的数据拷贝，性能下降，而双端队列只需要插入新空间补充）
            （ii）queue：deque
            （iii）priority_queue（堆）：vector+堆算法
    3.迭代器
        （1）迭代器概念
        （2）分类
            （i）原生态指针
            （ii）有各个容器负责提供：将原生态的指针封装一个类型    
                1.构造函数
                2.拷贝构造函数
                3.ref(T&) operator*()
                4.Ptr operator->()
                5.Self& operator++()和Self operator++(int)
                6.bool operator != (const Self& s)和bool operator == (const Self&)
                7.根据具体的数据结构确定是否需要提供
        （3）迭代器与容器的融合
            （i）定义迭代器的类型
            （ii）在容器类型给迭代器类型取别名
            （iii）在容器中增加begin()和end()
        （4）迭代器失效
            （i）迭代器在底层实际是一个指针，迭代器失效就代表指针失效，指向的空间不存在
            （ii）如何解决迭代器失效：根据具体的数据结构来解决
    4.算法
        （1）与具体数据结构相关联的算法--容器中实现的算法
        （2）通用的算法（掌握更容易完成在线OJ题目）
            （i）数值相关
            （ii）比较相关
            （iii）集合操作
            （iiii）排序
    5.仿函数
        （1）像函数调用一样的对象
        （2）实现方式：在类中重载()     返回值类型 operator()(参数列表)
        （3）定制算法的功能
    6.空间配置器（看书）
