（3） 一个程序从开始运行到结束的完整过程（四个过程）
1.预编译：可以使用-E（gcc test.c -E > test.i）使程序只进行到预编译指令
主要工作：引入头文件，去掉注释，处理所有的条件编译指令，宏替换，添加行号，保留所有的编译器指令
2.编译：gcc test.i -S > test.s
主要工作：语法分析，词法分析，符号汇总，生成汇编代码
3.汇编：gcc test.s -O test.o 
主要工作：将汇编代码转为二进制文件，二进制而建就可以让机器来读取，每一条汇编语句都会产生机器语言
.o文件类似windows系统下的.obj文件，在这里会形成符号表，给这些符号分配虚拟地址
4.链接：
由汇编程序生成的目标文件并不能立即执行，其中可能还有很多没有解决的问题，比如某个源文件中可能引用了另一个源文件中定义的符号（变量、函数）；在程序中可能调用了某个库文件的函数，这些问题都需要经过链接程序的处理方得以解决，链接程序的主要工作就是将有关的目标文件彼此相连接，将在一个文件中引用的符号同该符号在另一个文件中的定义链接起来，使得所有的这些目标文件成为一个能够被操作系统装入执行的统一整体。
静态链接：函数代码将其从所在的静态链接库中被拷贝到可执行程序中，程序在执行时这些代码装入到进程的虚拟地址空间中。静态链接的缺点就是浪费内存和磁盘空间，模块更新困难
动态链接：函数代码被放到动态链接库或者共享对象的某个目标文件中。链接程序此时所做的只是在最终可执行程序中记录下共享对象的名字以及其他少量的一些信息，在可执行文件被执行时，动态链接库的全部内容被映射到进程的虚拟地址空间，动态链接程序根据可执行程序中记录的信息找到相应的函数代码
动态链接解决了共享的目标文件多个副本浪费内存和磁盘的问题，在内存中共享一个目标文件的好处不仅仅节省内存，还可以减少物理页面的换入换出，也可以增加CPU的cache hit（缓存命中）

